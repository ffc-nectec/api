/*
 * Copyright (c) 2018 NECTEC
 *   National Electronics and Computer Technology Center, Thailand
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.2.50'
    id "org.jlleitschuh.gradle.ktlint" version "4.1.0"
}

group 'ffc.api'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
    maven { url "https://dl.bintray.com/blazei/maven" }
    maven { url "https://maven.google.com" }
}

sourceCompatibility = 1.8
compileKotlin { kotlinOptions.jvmTarget = "1.8" }
compileTestKotlin { kotlinOptions.jvmTarget = "1.8" }

dependencies {
    def jettyVersion = "9.4.1.v20170120"
    def jerseyVersion = "2.25.1"

    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "com.google.code.gson:gson:2.8.1"
    compile "org.eclipse.jetty:jetty-server:$jettyVersion"
    compile "org.eclipse.jetty:jetty-servlet:$jettyVersion"
    compile "org.eclipse.jetty:jetty-http:$jettyVersion"
    compile "org.glassfish.jersey.containers:jersey-container-servlet-core:$jerseyVersion"
    compile "org.glassfish.jersey.containers:jersey-container-jetty-servlet:$jerseyVersion"
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:$jerseyVersion"
    compile 'com.google.firebase:firebase-admin:5.11.0'
    compile "args4j:args4j:2.33"
    compile "com.github.ffc-nectec:entities:HealthCareGsonAdapter-SNAPSHOT"

    compile 'com.github.piruin:jbcrypt:0.4'
    compile "joda-time:joda-time:2.9.9"
    compile 'me.piruin:geok-gson:1.0.0-alpha-2'
    compile "org.mongodb:mongo-java-driver:3.6.3"

    testImplementation "org.mockito:mockito-core:2.19.0"
    testImplementation "de.bwaldvogel:mongo-java-server:1.8.0"
    testImplementation "org.amshove.kluent:kluent:1.34"
    testImplementation "junit:junit:4.12"
}

task stage(dependsOn: ['build', 'clean'])

build.mustRunAfter clean

sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
    test.java.srcDirs += 'src/test/kotlin/'
}

jar {
    from {
        configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    archiveName = "${project.name}.jar"
    destinationDir = file("$rootDir/build/bin")

    manifest { attributes 'Main-Class': 'ffc.airsync.api.FFCApiServerKt' }

    exclude 'META-INF/*.RSA'
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/NOTICE*'
    exclude 'META-INF/LICENSE*'
    exclude 'about.html'
}
